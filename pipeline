node {
   stage('CheckOut') { // for display purposes
      git branch: 'Development', credentialsId:'f', url: 'https://.visualstudio.com/'
   }
    //sonar:sonar needed for SonarQube in the mvn sh command
    stage('Build') {
      // Run the maven build
      withEnv(["JAVA_HOME=${ tool 'JAVA_HOME' }", "PATH+MAVEN=${tool 'MAVEN_HOME'}/bin:${env.JAVA_HOME}/bin"]) {
            //withSonarQubeEnv('SonarURL') {
                 //sh 'mvn  -f JAVA_DEV/Enterprise/pom.xml clean install'
                 //sh 'mvn  -f /pom.xml clean install'
                 sh 'mvn  -f CMDS_ESB_DEV/CMDSIntegration/ClaimsIntegration/pom.xml clean install'
           //}
      }
   }
   // stage("Quality Gate") {
       //timeout(time: 1, unit: 'HOURS')  { // Just in case something goes wrong, pipeline will be killed after a timeout
           //def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
          // if (qg.status != 'OK') {
            //  error "Pipeline aborted due to quality gate failure: ${qg.status}"
         //}
      //}
   //}

       // Build and Deploy to ACR 'stage'...
    stage('Image Build & ACR Push')          {
            app = docker.build("fssazecontreg.azurecr.io/", "-f ./DockerfileJenkins .")
                 withDockerRegistry([credentialsId: 'AKS_FSS_Credentials', url: 'https://ghsfssazecontreg.azurecr.io']) {
                  app.push('0.0.1-SNAPSHOT')
                 }
            //}
    }
     // push to AKS...
   stage('Push to AKS')          {
   withCredentials([azureServicePrincipal(credentialsId: 'b3e8ed',
                                    subscriptionIdVariable: 'a9d228ac',
                                    clientIdVariable: '6e2de089-',
                                    clientSecretVariable: 'Ra45iXmv',
                                    tenantIdVariable: 'e58a3c7f')]) {
   sh "az login --service-principal -u 6e2de089-4c -p 'Ra45iXmvmDs' -t e58a3c7f-b"

   sh 'kubectl --kubeconfig=/tmp/config1 apply -f /app/jenkins/workspace/Integration_Dev/Deployment_dev.yaml -v=8'

                                    }
  }
}
